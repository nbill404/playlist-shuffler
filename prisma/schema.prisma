// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @unique @default(autoincrement())
  email String  @unique
  username  String @unique
  password  String
  playlist Playlist[]
  song Song[]
}

model Playlist {
  id Int @id @default(autoincrement())
  name String 
  rank Int
  position Int
  canShuffle Boolean @default(true)
  starred Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
  parentPlaylist Playlist? @relation("Playlists", fields: [parentPlaylistId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentPlaylistId Int?
  childPlaylists Playlist[] @relation("Playlists")
  songs Song[]
}

model Song {
  id String
  user User @relation(fields: [userId], references: [id])
  userId Int
  playlist Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  playlistId Int

  @@id(name: "songPlaylistId", [id, playlistId])

  platform String
  title String
  artist String
  length Int
  thumbnailUrl String

  position Int @default(0)
  starred Boolean @default(false)
}
